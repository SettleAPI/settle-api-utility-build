{"version":3,"sources":["settle.js","App.js","serviceWorker.js","index.js","settle-logo.png","config.js"],"names":["requestCounter","outcomeDescriptions","1003","2000","3008","4004","4019","5006","5011","5012","paymentStatus","OK","PENDING","AUTH","FAIL","paymentStatusCodes","NOT_FOUND","ABORTED","REJECTED","REQUEST_EXPIRED","AUTH_EXPIRED","doRequest","method","endpoint","credentials","payload","a","merchantId","userId","secret","console","debug","axios","url","data","headers","response","status","error","getLongDynamicLink","shortlinkUrl","config","internal","schema","ius","baseUrl","apn","ibi","isi","encodeURIComponent","env","join","uid","ShortUniqueId","length","steps","experiments","NoMatch","location","useLocation","pathname","getPizzaName","catalog","Math","floor","random","getFakeProducts","name","price","wishList","randomItem","includes","push","shoppingCart","map","fruit","amount","max","getRandomInt","formattedList","formattedProduct","totalCost","reduce","previousValue","currentValue","getStoredSetting","defaultValue","storedValue","localStorage","getItem","value","log","setStoredSetting","setItem","defaultCredentials","environment","App","props","products","prod","sandbox","testMerchantId","testUserId","testSecret","qa","dev","state","shortlinkId","shortlinkIdWithCallback","shortlinkIdNoCallback","callbackUri","successReturnUri","failureReturnUri","step","loadingCredentials","loadingShortlink","loadingRequest","isClaimed","experiment","outcome","phonenumber","autoCapture","advancedOptions","additionalAmount","additionalEdit","allowCredit","currency","customer","action","posId","argstring","requiredScope","statusLog","apiLog","paymentResolved","body","this","setState","settle","addAPILogEntry","logEntry","statusText","error_description","message","addLogEntry","resetPayment","orderId","newState","posTid","newUrl","getShortlinkUrl","renderQRCode","resetOrder","resetCustomer","currentTransactionId","currentStatus","currentStatusCode","canvas","document","getElementById","width","acceptanceUrl","qr","element","size","event","target","type","checked","updatePaymentOptions","set","isOutcomeCallback","Error","tid","capturePayment","abortPayment","releasePayment","then","isValid","credStatus","catch","nextStep","prepareExperiment","prevStep","urlList","uris","deferreds","getLinkUrl","Promise","all","results","createMissingLinks","experimentStarted","lastStatusMessage","unshift","id","bodyObject","JSON","stringify","previous","duplicates","status_code","setTimeout","checkOutcome","link","parseInt","newTransactionId","transactionId","isExperimentShortlink","createPaymentRequest","getPaymentlinkURL","uri","parts","split","linkId","callback_uri","isExperimentPhonenumber","isExperimentPaymentlink","isExperimentShortlinkReuse","isExperimentShortlinkSingle","isOutcomePolling","longDynamicLink","deeplink","longDynamicLinkInternal","checkoutPortalUrl","getCheckoutPortalURL","portal","className","to","src","logo","alt","htmlFor","onChange","handleChange","path","href","rel","Object","keys","key","handleChangeCredentials","onClick","handleCredentials","getExperimentTitle","handleNext","handleCreateShortlink","handlePrevious","disabled","handleStartExperiment","handleStopExperiment","handleResetCustomer","style","textTransform","handleCreatePaymentRequest","handleAbort","handleCapture","handleRelease","React","Component","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5f6e6a84.chunk.js","sourcesContent":["import axios from 'axios';\n\n// https://developer.settle.eu/handlers.html#outcome\nexport const outcomeDescriptions = {\n  1003: `Waiting for customer ⏱`,\n  2000: `Payment captured 🤑`,\n  3008: `Payment authorized, ready for capture 💪`,\n  4004: `No such customer 🤷‍♂️`,\n  4019: `Merchant aborted payment before capture 😢`,\n  5006: `Customer rejected payment request 😢`,\n  5011: `Payment request expired ⏱`,\n  5012: `Authorization not captured within 3 days ⏱`,\n}\n\n// https://developer.settle.eu/handlers.html#outcome\nexport const paymentStatusCodes = {\n  PENDING: 1003,\n  OK: 2000,\n  AUTH: 3008,\n  NOT_FOUND: 4004,\n  ABORTED: 4019,\n  REJECTED: 5006,\n  REQUEST_EXPIRED: 5011,\n  AUTH_EXPIRED: 5012,\n}\n\n// https://developer.settle.eu/handlers.html#outcome\nexport const paymentStatus = {\n  OK: 'ok',\n  PENDING: 'pending',\n  AUTH: 'auth',\n  FAIL: 'fail',\n}\n\nlet requestCounter = 0;\nexport const doRequest = async function (method, endpoint, credentials, payload) {\n  const { merchantId, userId, secret } = credentials\n  console.debug(`[${++requestCounter}] REQUEST`, method, endpoint, credentials, payload)\n  let response;\n  try {\n    response = await axios({\n      method,\n      url: endpoint,\n      data: payload,\n      headers: {\n        'Accept': 'application/vnd.mcash.api.merchant.v1+json',\n        'Content-Type': 'application/json',\n        'x-auka-merchant': merchantId,\n        'X-Auka-User': userId,\n        'Authorization': `SECRET ${secret}`\n      },\n    })\n    console.debug(`[${requestCounter}] RESPONSE ${response.status}:`, response.data)\n    return response;\n  } catch (error) {\n    if (error.response) {\n      console.debug(`[${requestCounter}] RESPONSE ${error.response.status}:`, error.response.data)\n    } else {\n      console.debug(`[${requestCounter}] RESPONSE ${error}:`, error)\n    }\n    console.error(error)\n    throw error;\n  }\n\n};\n\nexport const getLongDynamicLink = function (shortlinkUrl, config, internal) {\n  let schema = 'https';\n  if (internal) schema = config.ius;\n  return [\n    `${schema}://${config.baseUrl}`,\n    `?apn=${config.apn}`,\n    `&ibi=${config.ibi}`,\n    `&isi=${config.isi}`,\n    `&ius=${config.ius}`,\n    `&link=${encodeURIComponent(`https://${config.env}://qr/${shortlinkUrl}`)}`,\n  ].join('');\n}\n\nexport default { outcomeDescriptions, paymentStatus, paymentStatusCodes, doRequest, getLongDynamicLink };","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation,\n} from \"react-router-dom\";\nimport logo from './settle-logo.png';\nimport settle from './settle.js';\nimport config from './config.js';\nimport ShortUniqueId from 'short-unique-id';\nimport set from 'lodash/set';\nimport qr from 'qrious'\n\nimport './App.css';\n\nconst uid = new ShortUniqueId({ length: 10 });\n\nconst steps = {\n  EXPERIMENTS: 1,\n  SHORTLINK: 2,\n  PAYMENT_REQUEST: 3,\n  ORDER: 4,\n}\n\nconst experiments = {\n  PHONENUMBER: 'phonenumber',\n  PAYMENTLINK: 'paymentlink',\n  SHORTLINK_REUSE: 'shortlink_reuse',\n  SHORTLINK_SINGLE: 'shortlink_single',\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nfunction getPizzaName() {\n  const catalog = ['Margherita', 'Vesuvio', 'Campagnola', 'Bolognese', 'Fungi', 'Capricciosa', 'Bussola', 'Opera', 'Marinara', 'Coprese', 'Pasana', 'Miami', 'Bari', 'Quattro stagioni', 'Grekisk pizza', 'Prima vera', 'Marina', 'Roma', 'Keven', 'Black & White', 'Ciao ciao', 'Calzone', 'Calzone special', 'Viking', 'Ufo', 'Disco',  'Azteka', 'Mexicana', 'Acapulco' ]\n  return catalog[Math.floor(Math.random() * catalog.length)];\n}\n\nfunction getFakeProducts() {\n  const catalog = [\n    { name: '🍐 Pear      ', price: 2 },\n    { name: '🍎 Apple   ', price: 2 },\n    { name: '🍌 Banana ', price: 3 },\n    { name: '🍇 Grapes ', price: 4 },\n    { name: '🥭 Mango  ', price: 5 },\n    { name: '🍒 Cherry  ', price: 6 },\n  ]\n\n  function getRandomInt(max = 5) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  function formattedProduct(name, amount, price) {\n    return ` ${amount} x\\t${name}              \\t${price} kr\\n`\n  }\n\n  const wishList = [];\n  while (wishList.length < 3) {\n    const randomItem = catalog[Math.floor(Math.random() * catalog.length)];\n    if (!wishList.includes(randomItem)) {\n      wishList.push(randomItem);\n    }\n  }\n\n  const shoppingCart = wishList.map(fruit => {\n    const amount = getRandomInt(3) + 1;\n    return { name: fruit.name, amount, price: fruit.price * amount }\n  });\n\n  const formattedList = shoppingCart.map(({ name, amount, price }) => {\n    return formattedProduct(name, amount, price)\n  }).join('');\n\n  const totalCost = shoppingCart.reduce((previousValue, currentValue) => {\n    return previousValue + currentValue.price\n  }, 0) * 100\n\n  return { formattedList, totalCost }\n}\n\n// return last value, or default if not found in local storage\nfunction getStoredSetting(name, defaultValue) {\n  let storedValue = localStorage.getItem(`settle-api-utility.config.${name}`);\n  if (storedValue === 'true') {\n    storedValue = true;\n  } else if (storedValue === 'false') {\n    storedValue = false;\n  }\n  const value = storedValue !== null ? storedValue : defaultValue\n  console.log(`Option ${name}:`, value);\n  return value;\n}\n\n// set initial config key/value in local storage\nfunction setStoredSetting(name, value) {\n  localStorage.setItem(`settle-api-utility.config.${name}`, value);\n}\n\nfunction defaultCredentials(environment) {\n  return {\n    merchantId: getStoredSetting(`credentials.${environment}.merchantId`, ''),\n    userId: getStoredSetting(`credentials.${environment}.userId`, ''),\n    secret: getStoredSetting(`credentials.${environment}.secret`, ''),\n  }\n\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const products = getFakeProducts();\n    const environment = getStoredSetting('environment', 'sandbox');\n    const posId = 'demoPos1';\n    const credentials = {\n      prod: defaultCredentials('prod'),\n      sandbox: {\n        merchantId: getStoredSetting(`credentials.${environment}.merchantId`, config['sandbox'].testMerchantId),\n        userId: getStoredSetting(`credentials.${environment}.userId`, config['sandbox'].testUserId),\n        secret: getStoredSetting(`credentials.${environment}.secret`, config['sandbox'].testSecret),\n      },\n      qa: defaultCredentials('qa'),\n      dev: defaultCredentials('dev'),\n    }\n\n    this.state = {\n      environment,\n      credentials,\n      shortlinkId: null,\n      shortlinkIdWithCallback: null,\n      shortlinkIdNoCallback: null,\n      callbackUri: getStoredSetting('callbackUri', 'https://api-utility.settle.eu/callback/'),\n      successReturnUri: getStoredSetting('successReturnUri', ''),\n      failureReturnUri: getStoredSetting('failureReturnUri', ''),\n      step: 1,\n      loadingCredentials: false,\n      loadingShortlink: false,\n      loadingRequest: false,\n      isClaimed: false,\n      experiment: getStoredSetting('experiment', experiments.PHONENUMBER),\n      outcome: getStoredSetting('outcome', 'polling'),\n      phonenumber: getStoredSetting('phonenumber', ''),\n      autoCapture: getStoredSetting('autoCapture', true),\n      advancedOptions: getStoredSetting('advancedOptions', false),\n      amount: products.totalCost,\n      additionalAmount: getStoredSetting('additionalAmount', 0),\n      additionalEdit: getStoredSetting('additionalEdit', false),\n      allowCredit: getStoredSetting('allowCredit', true),\n      currency: getStoredSetting('currency', 'NOK'),\n      customer: '',\n      action: getStoredSetting('action', 'SALE'),\n      posId: getStoredSetting('posId', posId),\n      argstring: getStoredSetting('argstring', posId),\n      requiredScope: getStoredSetting('requiredScope', ''),\n      statusLog: [],\n      apiLog: [],\n      paymentResolved: true,\n    }\n  }\n\n  async doRequest(method, endpoint, body) {\n    const { environment, credentials } = this.state;\n    const { merchantId, userId, secret } = credentials[environment];\n\n    if(!endpoint.includes('outcome')) this.setState({ loadingRequest: true })\n    try {\n      const response = await settle.doRequest(method, `/${environment}${endpoint}`, {\n        merchantId,\n        userId,\n        secret,\n      }, body)\n      this.setState({ loadingRequest: false })\n      if(!endpoint.includes('outcome')) this.addAPILogEntry(method, endpoint, body, response.status)\n      return response\n    } catch (error) {\n      let logEntry;\n      console.log('Check error:', error.response)\n      if (error.response) {\n        logEntry = `${error.response.statusText}. ${error.response.data.error_description ? error.response.data.error_description : ''}`\n      }\n      else {\n        logEntry = `${error.message}`;\n      }\n      this.addLogEntry(logEntry)\n      this.addAPILogEntry(method, endpoint, body, error.response && error.response.status)\n      throw error\n    }\n  };\n\n  resetOrder() {\n    const { experiment, shortlinkId } = this.state;\n    this.resetPayment();\n    this.addLogEntry('Generated new order')\n    const products = getFakeProducts();\n    const orderId = uid();\n\n    let newState = {\n      posTid: orderId,\n      amount: products.totalCost,\n      message: `Thanks for trying our ${getPizzaName()} pizza! 🍕`,\n    }\n\n    if (experiment === experiments.SHORTLINK_SINGLE) {\n      const newUrl = this.getShortlinkUrl(shortlinkId, orderId);\n      newState[\"argstring\"] = orderId\n      newState[\"acceptanceUrl\"] = newUrl\n      this.renderQRCode(newUrl);\n    }\n  \n    this.setState(newState);\n  }\n\n  handleResetCustomer() {\n    this.resetOrder();\n    this.resetCustomer();\n  }\n\n  resetPayment() {\n    const { experiment } = this.state;\n    const isExperimentShortlink = experiment === experiments.SHORTLINK_REUSE || experiment === experiments.SHORTLINK_SINGLE;\n    let state = {\n      loadingRequest: false,\n      isClaimed: false,\n      currentTransactionId: null,\n      currentStatus: null,\n      currentStatusCode: null,\n    }\n\n    if(!isExperimentShortlink) {\n      // Reset QR code\n      const canvas = document.getElementById('qr');\n      // eslint-disable-next-line no-self-assign\n      if (canvas) canvas.width = canvas.width // quick and dirty reset of QR canvas\n\n      state[\"acceptanceUrl\"] = ''\n    }\n\n\n    // reset payment state\n    this.setState(state);\n\n\n  }\n\n  renderQRCode(acceptanceUrl) {\n    new qr({\n      element: document.getElementById('qr'),\n      value: acceptanceUrl,\n      size: 200,\n    })\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    },() => {\n      setStoredSetting(name, value);\n\n      if (name === 'callbackUri') {\n        this.setState({ shortlinkIdWithCallback: '' })\n      }\n\n      if (name === 'outcome' && value === 'callback') {\n        this.setState({ shortlinkId: this.state.shortlinkIdWithCallback })\n      }\n\n      if (name === 'outcome' && value === 'polling') {\n        this.setState({ shortlinkId: this.state.shortlinkIdNoCallback })\n      }\n\n      if (name === 'argstring' ) {\n        this.updatePaymentOptions();\n      }\n    });\n  }\n\n  updatePaymentOptions() {\n    const { shortlinkId, argstring } = this.state;\n    const newUrl = this.getShortlinkUrl(shortlinkId, argstring);\n    this.setState({ acceptanceUrl: newUrl})\n    this.renderQRCode(newUrl);\n  }\n\n  handleChangeCredentials(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const { credentials, environment } = this.state;\n\n    this.setState({\n      credentials: set(credentials, `${environment}.${name}`, value)\n    });\n\n    setStoredSetting(`credentials.${environment}.${name}`, value);\n\n  }\n\n  resetCustomer() {\n    const { experiment, phonenumber, shortlinkIdWithCallback, shortlinkIdNoCallback } = this.state;\n    let shortlinkId = null;\n    let customer = '';\n\n    switch (experiment) {\n      case experiments.PHONENUMBER:\n        customer = phonenumber;\n        break;\n      case experiments.SHORTLINK_REUSE:\n      case experiments.SHORTLINK_SINGLE:\n        if (this.isOutcomeCallback()) {\n          if (!this.state.shortlinkIdWithCallback) {\n            throw Error(\"Unable to get or create shortlink\");\n          }\n          shortlinkId = shortlinkIdWithCallback;\n        } else {\n          shortlinkId = shortlinkIdNoCallback;\n        }\n        customer = `shortlink_id:${shortlinkId}`;\n        break;\n      case experiments.PAYMENTLINK:\n      default:\n    }\n\n    this.setState({\n      customer,\n      shortlinkId,\n      loadingRequest: false,\n    });\n  }\n\n  async capturePayment(tid) {\n    await this.doRequest('PUT', `/merchant/v1/payment_request/${tid}/`, { 'action': 'capture' });\n  }\n\n  async abortPayment(tid) {\n    const { currentTransactionId } = this.state;\n    await this.doRequest('PUT', `/merchant/v1/payment_request/${tid}/`, { 'action': 'abort' });\n    this.addLogEntry(`Aborted payment request ${currentTransactionId}`)\n  }\n\n  async releasePayment(tid) {\n    await this.doRequest('PUT', `/merchant/v1/payment_request/${tid}/`, { 'action': 'release' });\n  }\n\n  handleCapture() {\n    const { currentTransactionId } = this.state;\n    this.capturePayment(currentTransactionId);\n  }\n\n  handleAbort(event) {\n    const { currentTransactionId } = this.state;\n    this.abortPayment(currentTransactionId);\n  }\n\n  handleRelease(event) {\n    const { currentTransactionId } = this.state;\n    this.releasePayment(currentTransactionId);\n  }\n\n  handleCredentials(event) {\n    this.setState({ loadingCredentials: true });\n    const { environment, credentials } = this.state;\n    const { userId } = credentials[environment];\n\n    this.doRequest('GET', `/merchant/v1/api_key/${userId}/`, '')\n      .then(response => {\n        const statusMessage = `Merchant credentials validated.`\n        this.setState({\n          loadingCredentials: false,\n          step: 2,\n          isValid: true,\n          credStatus: statusMessage\n        })\n        this.addLogEntry(statusMessage);\n      })\n      .catch(error => {\n        this.setState({\n          loadingCredentials: false,\n          credStatus: error.message\n        })\n      })\n  }\n\n  prepareExperiment(){\n    this.setState({ argstring: this.state.posId});\n    this.resetOrder();\n    this.resetCustomer();\n  }\n\n  handleNext(event) {\n    const { step, experiment } = this.state\n    let nextStep = step + 1;\n    if (step === steps.SHORTLINK - 1 && (experiment === experiments.PHONENUMBER || experiment === experiments.PAYMENTLINK)) nextStep += 1;\n    if (nextStep === steps.PAYMENT_REQUEST) this.prepareExperiment();\n    this.setState({ step: nextStep })\n  }\n\n  handlePrevious(event) {\n    const { step, experiment } = this.state\n    let prevStep = step - 1;\n    if (step === steps.PAYMENT_REQUEST) {\n      this.prepareExperiment();\n      if (experiment === experiments.PHONENUMBER || experiment === experiments.PAYMENTLINK) prevStep -= 1\n    }\n    this.setState({ step: prevStep })\n  }\n\n  async handleCreateShortlink(event) {\n    try {\n      this.setState({ loadingShortlink: true })\n      const response = await this.doRequest('GET', '/merchant/v1/shortlink/', {});\n      const urlList = response.data.uris;\n      const deferreds = urlList.map(url => this.getLinkUrl(url));\n      this.addLogEntry('');\n      this.addLogEntry(`Analysing ${urlList.length} existing shortlinks`);\n\n      Promise.all(deferreds).then(results => {\n        this.createMissingLinks();\n      });\n\n    } catch (error) {\n      console.error(error)\n      this.addLogEntry(error.message)\n    }\n  }\n\n  handleStopExperiment(event) {\n    this.addLogEntry('Experiment stopped');\n    this.resetOrder();\n    this.setState({\n      experimentStarted: false,\n      step: steps.PAYMENT_REQUEST,\n      statusLog: [],\n    });\n  }\n\n  addLogEntry(message) { \n    const { statusLog, lastStatusMessage } = this.state\n    if (message === lastStatusMessage) {\n      return;\n    }\n    console.log(`log > ${message}`)\n    statusLog.unshift({ id: statusLog.length, message });\n    this.setState({ statusLog, lastStatusMessage: message })\n  };\n\n  addAPILogEntry(method, endpoint, bodyObject, status) { \n    const body = JSON.stringify(bodyObject)\n\n    let { apiLog } = this.state\n    if (apiLog.length > 0) {\n      const previous = apiLog[0]\n      const isMatching = previous.method === method\n        && previous.endpoint === endpoint\n        && previous.body === body\n        && previous.status === status\n\n      if (isMatching) {\n        apiLog[0].duplicates = previous.duplicates + 1\n        return;\n      }\n    }\n\n    const logEntry = { id: apiLog.length, method, endpoint, body, status, duplicates: 0 };\n    apiLog.unshift(logEntry);\n    this.setState({ apiLog })\n  };\n\n  /*\n    PENDING: `Waiting for customer ⏱`,\n    OK: `Payment captured 🤑`,\n    AUTH: `Payment authorized, ready for capture 💪`,\n    NOT_FOUND: `No such customer 🤷‍♂️`,\n    ABORTED: `Merchant aborted payment before capture 😢`,\n    REJECTED: `Customer rejected payment request 😢`,\n    REQUEST_EXPIRED: `Payment request expired ⏱`,\n    AUTH_EXPIRED: `Authorization not captured within 3 days ⏱`,\n  */\n  async checkOutcome() {\n    const { paymentResolved, currentTransactionId, autoCapture, isClaimed } = this.state;\n\n    if (!paymentResolved) {\n      try {\n        const response = await this.doRequest('GET', `/merchant/v1/payment_request/${currentTransactionId}/outcome/`);\n        const { status, status_code, customer } = response.data;\n\n        this.addLogEntry(settle.outcomeDescriptions[status_code])\n\n        this.setState({\n          currentStatus: status,\n          currentStatusCode: status_code,\n          customer,\n        })\n\n        if (status === settle.paymentStatus.OK || status === settle.paymentStatus.FAIL) {\n          this.setState({\n            paymentResolved: true\n          })\n        }\n\n        if (!isClaimed && customer.includes('token')) {\n          this.addLogEntry('Customer scanned QR code')\n          this.setState({ isClaimed: true })\n        }\n\n        if (status === settle.paymentStatus.AUTH) {\n          if (autoCapture) {\n            this.capturePayment(currentTransactionId);\n          }\n        }\n\n        setTimeout(() => this.checkOutcome(), 3000);\n      } catch (error) {\n        setTimeout(() => this.checkOutcome(), 3000);\n        return;\n      }\n    }\n    // setTimeout(() => this.checkOutcome(), 3000);\n    // return;\n  };\n\n  isOutcomeCallback() {\n    return this.state.outcome === 'callback';\n  };\n\n  isOutcomePolling() {\n    return this.state.outcome === 'polling';\n  };\n\n  async createMissingLinks() {\n    const { callbackUri } = this.state;\n    if (!this.state.shortlinkIdWithCallback) {\n      try {\n        const response = await this.doRequest('POST', '/merchant/v1/shortlink/', { 'callback_uri': callbackUri })\n        const link = response.data\n        this.addLogEntry(`Created link ${link.id} with callback ${callbackUri}`);\n        this.setState({ shortlinkIdWithCallback: link.id });\n      } catch (error) {\n        this.addLogEntry(`Could not create link`);\n      }\n    }\n    if (!this.state.shortlinkIdNoCallback) {\n      try {\n        const response = await this.doRequest('POST', '/merchant/v1/shortlink/', { 'callback_uri': null })\n        const link = response.data\n        console.log('Created', link.id, 'without callback');\n\n      } catch (error) {\n        this.addLogEntry(`Could not create link`);\n      }\n    }\n    this.setState({\n      loadingShortlink: false,\n      shortlinkId: this.isOutcomeCallback() ? this.state.shortlinkIdWithCallback : this.state.shortlinkIdNoCallback\n    });\n  };\n\n  async createPaymentRequest() {\n    const {\n      action,\n      amount,\n      additionalAmount,\n      additionalEdit,\n      allowCredit,\n      currency,\n      message,\n      customer,\n      currentTransactionId,\n      posId,\n      posTid,\n      requiredScope,\n      callbackUri,\n      successReturnUri,\n      failureReturnUri\n    } = this.state;\n\n    let body = {\n      'action': action,\n      'amount': parseInt(amount),\n      'currency': currency,\n      'pos_id': posId,\n      'pos_tid': posTid,\n      'allow_credit': allowCredit,\n      'text': message,\n      'additional_amount': parseInt(additionalAmount),\n      'additional_edit': additionalEdit,\n      //display_message_uri': 'Fooobar?',\n      // 'line_items': [ {\n      //   'product_id': 'abc123',\n      //   'description': 'Blue jeans',\n      //   'vat_rate': '0.00',\n      //   'quantity': '2',\n      //   'currency': 'NOK',\n      //   'item_cost': 500,\n      //   'total': 1000\n      // }]\n    }\n    if (requiredScope !== '') body['required_scope'] = requiredScope\n    if (customer !== '') body['customer'] = customer\n    if (this.isOutcomeCallback()) body['callback_uri'] = callbackUri\n    if (successReturnUri !== '') body['success_return_uri'] = successReturnUri\n    if (failureReturnUri !== '') body['failure_return_uri'] = failureReturnUri\n\n    const response = await this.doRequest('POST', '/merchant/v1/payment_request/', body)\n    const newTransactionId = response.data.id;\n    if (newTransactionId !== currentTransactionId) {\n      this.addLogEntry(`Created payment request ${newTransactionId}`)\n      this.setState({\n        currentTransactionId: newTransactionId,\n        paymentResolved: false,\n      }, () => {\n        this.checkOutcome();\n      })\n    } else {\n      this.addLogEntry(`Payment already exist ${newTransactionId}`)\n    }\n    return newTransactionId\n  }\n\n  getShortlinkUrl(shortlinkId, argstring) {\n    return `https://settle.eu/s/${shortlinkId}/${argstring}`;\n  };\n\n  getPaymentlinkURL(transactionId) {\n    return `https://settle.eu/p/${transactionId}`;\n  };\n\n  getCheckoutPortalURL(transactionId, baseUrl) {\n    return `https://${baseUrl}/checkout_portal/p/${transactionId}/`;\n  };\n\n  handleStartExperiment() {\n    const { argstring, posTid, experiment, shortlinkId } = this.state;\n    const isExperimentShortlink = experiment === experiments.SHORTLINK_REUSE || experiment === experiments.SHORTLINK_SINGLE;\n\n    this.resetPayment();\n\n    let acceptanceUrl;\n\n    if (experiment === experiments.SHORTLINK_REUSE) {\n      acceptanceUrl = this.getShortlinkUrl(shortlinkId, argstring);\n    }\n\n    if (experiment === experiments.SHORTLINK_SINGLE) {\n      acceptanceUrl = this.getShortlinkUrl(shortlinkId, posTid);\n      this.setState({\n        argstring: posTid,\n      })\n    }\n\n    this.setState({\n      experimentStarted: true,\n      step: steps.ORDER,\n      acceptanceUrl,\n    }, () => {\n      if (isExperimentShortlink) this.renderQRCode(acceptanceUrl);\n    })\n  }\n\n  async handleCreatePaymentRequest() {\n    const { experiment, acceptanceUrl } = this.state;\n    const tid = await this.createPaymentRequest();\n    let newUrl = acceptanceUrl;\n\n    if (experiment === experiments.PAYMENTLINK) {\n      newUrl = this.getPaymentlinkURL(tid);\n      this.renderQRCode(newUrl);\n    }\n\n    this.setState({\n      loadingRequest: false,\n      acceptanceUrl: newUrl,\n    })\n  }\n\n  async getLinkUrl(uri) {\n    var parts = uri.split('/'),\n      linkId = parts[parts.length - 2];\n\n    const response = await this.doRequest('GET', `/merchant/v1/shortlink/${linkId}/`, {});\n    const link = response.data;\n    let message;\n    console.log('callback', link.id, link.callback_uri)\n    if (!link.callback_uri && !this.state.shortlinkIdNoCallback) {\n      this.setState({ shortlinkIdNoCallback: link.id })\n      message = `Using link ${link.id} for outcome polling`;\n      this.addLogEntry(message)\n    }\n    if (link.callback_uri === this.state.callbackUri) {\n      this.setState({ shortlinkIdWithCallback: link.id, })\n      message = `Using link ${link.id} for outcome callback ${link.callback_uri}`\n      this.addLogEntry(message);\n    }\n\n  };\n\n  render() {\n    const {\n      step,\n      experiment,\n      posId,\n      posTid,\n      amount,\n      credentials,\n      action,\n      apiLog,\n      message,\n      customer,\n      currency,\n      argstring,\n      statusLog,\n      credStatus,\n      successReturnUri,\n      failureReturnUri,\n      isClaimed,\n      phonenumber,\n      environment,\n      shortlinkId,\n      callbackUri,\n      allowCredit,\n      autoCapture,\n      acceptanceUrl,\n      requiredScope,\n      additionalEdit,\n      additionalAmount,\n      loadingShortlink,\n      lastStatusMessage,\n      loadingCredentials,\n      paymentResolved,\n      currentStatus,\n      currentStatusCode,\n      currentTransactionId,\n      loadingRequest,\n      advancedOptions,\n    } = this.state\n\n    const isExperimentPhonenumber = experiment === experiments.PHONENUMBER;\n    const isExperimentPaymentlink = experiment === experiments.PAYMENTLINK;\n    const isExperimentShortlinkReuse = experiment === experiments.SHORTLINK_REUSE;\n    const isExperimentShortlinkSingle = experiment === experiments.SHORTLINK_SINGLE;\n    const isExperimentShortlink = isExperimentShortlinkReuse || isExperimentShortlinkSingle;\n    const isOutcomeCallback = this.isOutcomeCallback();\n    const isOutcomePolling = this.isOutcomePolling();\n    const longDynamicLink = settle.getLongDynamicLink(acceptanceUrl, config[environment].deeplink, false);\n    const longDynamicLinkInternal = settle.getLongDynamicLink(acceptanceUrl, config[environment].deeplink, true);\n    const checkoutPortalUrl = this.getCheckoutPortalURL(currentTransactionId, config[environment].portal);\n    const { merchantId, userId } = credentials[environment];\n    const getExperimentTitle = () => {\n        switch(experiment) {\n          case experiments.PHONENUMBER: \n            return 'Phonenumber flow';\n          case experiments.PAYMENTLINK: \n            return 'Paymentlink flow';\n          case experiments.SHORTLINK_REUSE: \n            return 'Shortlink (reuseable) flow';\n          case experiments.SHORTLINK_SINGLE: \n            return 'Shortlink (single use) flow';\n          default:\n            return '';\n\n        }\n    }\n    return (\n      <Router>\n\n        <main className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"App-content\">\n              <Link to=\"/\"><img src={logo} className=\"App-logo hide-sm\" alt=\"logo\" /></Link>\n              <nav className=\"pure-menu pure-menu-horizontal\">\n                <ul className=\"pure-menu-list\">\n                  <li className=\"pure-menu-item\">\n                    <Link className=\"pure-menu-link\" to=\"/\">Home</Link>\n                  </li>\n                  <li className=\"pure-menu-item\">\n                    <Link className=\"pure-menu-link\" to=\"/settings\">Settings</Link>\n                  </li>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <label htmlFor=\"advancedOptions\" className=\"pure-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"advancedOptions\"\n                      id=\"advancedOptions\"\n                      value=\"advancedOptions\"\n                      checked={advancedOptions}\n                      onChange={(event) => this.handleChange(event)} />\n                    &nbsp;&nbsp;Advanced options\n                  </label>\n\n                </ul>\n              </nav>\n              <div className=\"App-controls\">\n\n\n\n                <label className=\"hide-md\"></label>&nbsp;{environment}:{merchantId}:{userId}\n              </div>\n            </div>\n          </header>\n\n\n\n\n          <Switch>\n            <Route path=\"/settings\">\n\n              <div className=\"content\">\n                <h1>Settings</h1>\n                <div className=\"pure-g\">\n\n                  <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                    <div className=\"pure-form pure-form-stacked\">\n\n                      <div className=\"box\">\n                        <h2>Credentials</h2>\n                        <p>To access the Settle API, you need to set create an API Key in the <a href=\"https://business.sandbox.settle.eu\" target=\"_blank\" rel=\"noopener noreferrer\">Settle Business Portal</a>.</p><p>If you haven't done so yet, we have some merchant credentials preset below that you can test with.</p>\n\n                        <div className=\"pure-control-group\">\n                          <label htmlFor=\"environment\" >Environment</label>\n                          <select\n                            id=\"environment\"\n                            name=\"environment\"\n                            value={environment}\n                            onChange={(event) => this.handleChange(event)} >\n                            {Object.keys(config).map((key) => <option key={key}>{key}</option>)}\n                          </select>\n                        </div>\n                        <div className=\"pure-control-group\">\n                          <label>Merchant ID</label>\n                          <input\n                            name={`merchantId`}\n                            type=\"text\"\n                            value={credentials[environment].merchantId}\n                            onChange={(event) => this.handleChangeCredentials(event)} />\n                        </div>\n                        <div className=\"pure-control-group\">\n                          <label>User ID</label>\n                          <input\n                            name={`userId`}\n                            type=\"text\"\n                            value={credentials[environment].userId}\n                            onChange={(event) => this.handleChangeCredentials(event)} />\n                        </div>\n                        <div className=\"pure-control-group\">\n                          <label>Secret</label>\n                          <input\n                            name={`secret`}\n                            type=\"text\"\n                            value={credentials[environment].secret}\n                            onChange={(event) => this.handleChangeCredentials(event)} />\n                        </div>\n                        {!loadingCredentials && <div className=\"pure-control-group button-group\">\n                          <button className=\"pure-button pure-button-primary\" type=\"button\" onClick={(event) => this.handleCredentials(event)}>Test</button>\n                        </div>}\n                        <div id=\"credential-status\">\n                          {loadingCredentials && <div className=\"loader\"></div>}\n                          <p>{credStatus}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                  <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                    <div className=\"pure-form pure-form-stacked\">\n                      <div className=\"box\">\n                        <h2>Outcome</h2>\n                        <div>\n\n                          <p>To learn the outcome of a payment request, we can either poll for it or register a custom webhook that handles status changes.</p>\n                          <p>A callback webhook is preferred if the network policy of the POS environment allows for it.</p>\n                          <p>Some events are only available via callback.</p>\n\n                          <h3>Outcome options</h3>\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"polling\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"outcome\"\n                                id=\"polling\"\n                                value=\"polling\"\n                                checked={isOutcomePolling}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Polling\n                            </label>\n                            <span className=\"pure-form-message-inline\">Continuously poll for changes by calling GET on <strong>/payment_request/&lt;tid&gt;/outcome/</strong></span>\n                          </div>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"callback\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"outcome\"\n                                id=\"callback\"\n                                value=\"callback\"\n                                checked={isOutcomeCallback}\n\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Callback\n                            </label>\n                            <span className=\"pure-form-message-inline\">When the status of the payment request changes. The data in the \"object\" part of the message is the same as calling GET on <strong>/payment_request/&lt;tid&gt;/outcome/</strong></span>\n                          </div>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"callbackUri\">Callback URI</label>\n                            <input\n                              className=\"pure-input-1\"\n                              name=\"callbackUri\"\n                              type=\"text\"\n                              id=\"callbackUri\"\n                              value={callbackUri}\n\n                              onChange={(event) => this.handleChange(event)} />\n                            <span className=\"pure-form-message-inline\">URL for webhook handling callbacks</span>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </Route>\n\n            <Route path=\"/\">\n\n              <div className=\"content\">\n                <h1>{getExperimentTitle()}</h1>\n                <div className=\"pure-g\">\n\n                  {step === steps.EXPERIMENTS &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n\n                          <h2>Choose experiment</h2>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"phonenumber\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"experiment\"\n                                id=\"phonenumber\"\n                                value=\"phonenumber\"\n                                checked={isExperimentPhonenumber}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Phonenumber\n                            </label>\n                            <span className=\"pure-form-message-inline\">Send payment request to user phone.</span>\n                          </div>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"paymentlink\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"experiment\"\n                                id=\"paymentlink\"\n                                value=\"paymentlink\"\n                                checked={isExperimentPaymentlink}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Paymentlink\n                            </label>\n                            <span className=\"pure-form-message-inline\">Create payment request to be claimed by user.</span>\n                          </div>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"shortlink_reuse\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"experiment\"\n                                id=\"shortlink_reuse\"\n                                value=\"shortlink_reuse\"\n                                checked={isExperimentShortlinkReuse}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Shortlink (reuseable)\n                            </label>\n                            <span className=\"pure-form-message-inline\">When user scans, create payment request for user.</span>\n                          </div>\n\n                          <div className=\"pure-control-group\">\n                            <label htmlFor=\"shortlink_single\" className=\"pure-radio\">\n                              <input\n                                type=\"radio\"\n                                name=\"experiment\"\n                                id=\"shortlink_single\"\n                                value=\"shortlink_single\"\n                                checked={isExperimentShortlinkSingle}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Shortlink (single use)\n                            </label>\n                            <span className=\"pure-form-message-inline\">When user scans, create payment request based on information embeded in the Shortlink.</span>\n                          </div>\n\n\n                          <div>\n                            <div className=\"pure-control-group button-group\">\n                              <button className=\"pure-button pure-button-primary\" type=\"button\" onClick={(event) => this.handleNext(event)}>Next</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>}\n\n\n\n                  {step === steps.SHORTLINK &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n                          <h2>Shortlinks</h2>\n                          <div>\n                            <p>A Shortlink is a placeholder and trigger point for payment request creation. Shortlinks can only handle one customer at a time, but can be reused my many different customers. As the POS usually only service one customer at a time, having one dedicated Shortlink per POS is usually fine. </p>\n                            <p>To avoid unnecessary API calls during the payment cycle it's best to create dedicated Shortlinks as part of the POS setup phase. </p>\n                            <p>In this experiment we will first try to retrieve any current links for this merchant and otherwise create a new one with the desired callback URL.</p>\n                            <div className=\"pure-control-group button-group\">\n                              {!loadingShortlink && !shortlinkId &&\n                                <button className=\"pure-button pure-button-primary\" type=\"button\" onClick={(event) => this.handleCreateShortlink(event)}>\n                                  Retrieve shortlinks\n                                </button>\n                              }\n                              {loadingShortlink && <div className=\"loader\"></div>}\n                              {!loadingShortlink && shortlinkId && <span>Done!</span>}\n                            </div>\n                            <p></p>\n                            <div className=\"pure-control-group button-group\">\n                              <button className=\"pure-button\" type=\"button\" onClick={(event) => this.handlePrevious(event)}>Go back</button>\n                              <button className=\"pure-button pure-button-primary\" type=\"button\" disabled={!shortlinkId} onClick={(event) => this.handleNext(event)}>Next</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>}\n\n                  {step === steps.PAYMENT_REQUEST &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n                          <h2>Test POS</h2>\n                          <p>Here we are preparing a fake order in our siplified test POS system, to be paid with Settle.</p>\n\n                          <div className=\"container\" id=\"transaction\">\n                            <h3>Order details</h3> \n                            <p><strong>Order ID:</strong> {posTid}</p>\n                            <p><strong>Amount:</strong> {amount / 100} {currency}</p>\n                            <div><strong>Message:</strong></div><pre>{message}</pre>\n                            {advancedOptions &&<p><strong>POS ID:</strong> {posId}</p>}\n                            {advancedOptions && isExperimentShortlink &&\n                              <p><strong>Shortlink ID:</strong> {shortlinkId}</p>}\n                            <p></p>\n\n                            {advancedOptions && <button className=\"pure-button\" type=\"button\" disabled={!paymentResolved} onClick={(event) => this.resetOrder(event)}>Generate demo order</button>}\n                            <div className=\"pure-control-group\">\n                              <div className=\"pure-control-group button-group\">\n                                {!loadingShortlink && <button className=\"pure-button\" type=\"button\" onClick={(event) => this.handlePrevious(event)}>Go back</button>}\n                                {!loadingRequest &&\n                                  <button\n                                    className=\"pure-button pure-button-primary\"\n                                    disabled={(isExperimentShortlink && !shortlinkId)}\n                                    type=\"button\" onClick={(event) => this.handleStartExperiment(event)}>\n                                    Start experiment\n                                  </button>}\n\n                                {loadingRequest && <div className=\"loader\"></div>}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>}\n\n                  {step === steps.PAYMENT_REQUEST &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n                          <h2>Settle payment request</h2>\n                          <div className=\"container\" id=\"transaction\">\n\n                            <p>The customer can either reject or authorize a payment request. An authorization is valid for 3 days, but can be reauthorized before it expires to be valid for 3 new days. Once the payment is authorized, it can be captured to be included in the next settlement.</p>\n\n\n\n\n                            {advancedOptions && <>\n                              <h3>Request options</h3>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"action\">Action</label>\n                                <input\n                                  className=\"pure-input-1-4\"\n                                  name=\"action\"\n                                  type=\"text\"\n                                  id=\"action\"\n                                  value={action}\n                                  onChange={(event) => this.handleChange(event)} />\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"amount\">Amount {currency} (in cents)</label>\n                                <input\n                                  className=\"pure-input-1-4\"\n                                  name=\"amount\"\n                                  type=\"number\"\n                                  id=\"amount\"\n                                  value={amount}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">The base amount of the payment.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"currency\">Currency</label>\n                                <input\n                                  className=\"pure-input-1-4\"\n                                  name=\"currency\"\n                                  type=\"text\"\n                                  id=\"currency\"\n                                  value={currency}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Three (3) chars following <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a></span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"message\">Payment message</label>\n                                <input\n                                  className=\"pure-input-1\"\n                                  name=\"message\"\n                                  type=\"text\"\n                                  id=\"message\"\n                                  value={message}\n                                  onChange={(event) => this.handleChange(event)} />\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"additionalAmount\">additionalAmount (in cents)</label>\n                                <input\n                                  className=\"pure-input-1-4\"\n                                  name=\"additionalAmount\"\n                                  type=\"number\"\n                                  id=\"additionalAmount\"\n                                  value={additionalAmount}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Typically a cash withdrawal or gratuity</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"callbackUri\">Callback URI</label>\n                                <input\n                                  className=\"pure-input-1\"\n                                  name=\"callbackUri\"\n                                  type=\"text\"\n                                  id=\"callbackUri\"\n                                  value={isOutcomeCallback ? callbackUri : ''}\n                                  onChange={(event) => this.handleChange(event)}\n                                  disabled={isOutcomePolling}\n                                />\n                                <span className=\"pure-form-message-inline\">URL for server handling callbacks.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"additionalEdit\">\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"additionalEdit\"\n                                    id=\"additionalEdit\"\n                                    value=\"additionalEdit\"\n                                    checked={additionalEdit}\n                                    onChange={(event) => this.handleChange(event)} />\n                                  &nbsp;&nbsp;Additional edit</label>\n                                <span className=\"pure-form-message-inline\">Whether user is allowed to add additional amount for gratuity or similar.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"allowCredit\">\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"allowCredit\"\n                                    id=\"allowCredit\"\n                                    value=\"allowCredit\"\n                                    checked={allowCredit}\n                                    onChange={(event) => this.handleChange(event)} />\n                                  &nbsp;&nbsp;Allow credit funding</label>\n                                <span className=\"pure-form-message-inline\">Whether to allow credit payment for this payment request. Credit incurs interchange.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"customer\">Customer</label>\n                                <input\n                                  className=\"pure-input-2-4\"\n                                  name=\"customer\"\n                                  type=\"text\"\n                                  id=\"customer\"\n                                  value={customer}\n                                  onChange={(event) => this.handleChange(event)}\n                                />\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"posId\">POS ID</label>\n                                <input\n                                  className=\"pure-input-1-4\"\n                                  name=\"posId\"\n                                  type=\"text\"\n                                  id=\"posId\"\n                                  value={posId}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">The POS this payment request originates from, used for informing users.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"posTid\">POS Transaction ID</label>\n                                <input\n                                  className=\"pure-input-3-4\"\n                                  name=\"posTid\"\n                                  type=\"text\"\n                                  id=\"posTid\"\n                                  value={posTid}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Local transaction id for POS. This must be unique for the POS.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"requiredScope\">Required scope</label>\n                                <input\n                                  className=\"pure-input-3-4\"\n                                  name=\"requiredScope\"\n                                  type=\"text\"\n                                  id=\"requiredScope\"\n                                  value={requiredScope}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Set this field to ask for data from the user together with the payment request.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"successReturnUri\">Success URI</label>\n                                <input\n                                  className=\"pure-input-3-4\"\n                                  name=\"successReturnUri\"\n                                  type=\"text\"\n                                  id=\"successReturnUri\"\n                                  value={successReturnUri}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Return URL if payment successful.</span>\n                              </div>\n                              <div className=\"pure-control-group\">\n                                <label htmlFor=\"failureReturnUri\">Failure URI</label>\n                                <input\n                                  className=\"pure-input-3-4\"\n                                  name=\"failureReturnUri\"\n                                  type=\"text\"\n                                  id=\"failureReturnUri\"\n                                  value={failureReturnUri}\n                                  onChange={(event) => this.handleChange(event)} />\n                                <span className=\"pure-form-message-inline\">Return URL if payment failed.</span>\n                              </div>\n                            </>}\n\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>}\n\n\n\n\n\n                  {step === steps.ORDER &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n\n                          <div className=\"pure-control-group\">\n                            <h2>Test POS</h2>\n                          </div>\n                          <div className=\"pure-control-group\">\n                          <div>\n                            <p><strong>POS ID</strong>:<br />{posId}</p>\n                            <strong>Status:</strong></div><pre>{lastStatusMessage}</pre>\n                            <p></p>\n                            <p><strong>Order ID</strong>:<br />{posTid}</p>\n                            <p><strong>Amount</strong>:<br />{amount / 100} {currency}</p>\n                            <div><strong>Message:</strong> </div><pre>{message}</pre>\n                          </div>\n                          <p></p>\n\n\n                          {isExperimentShortlink && <>\n                            <p><strong>Shortlink ID:</strong> <br />{shortlinkId}</p>\n                            <div className=\"pure-control-group\">\n                              <label htmlFor=\"argstring\">Argstring for shortlink</label>\n                              <input\n                                className=\"pure-input-1\"\n                                name=\"argstring\"\n                                type=\"text\"\n                                id=\"argstring\"\n                                value={argstring}\n                                onChange={(event) => this.handleChange(event)} />\n                            </div>\n                            <span className=\"pure-form-message-inline\">\n                              Optional payload at the end of the shortlink url. It's attatched to the callback and can be used in cases where the QR code generation happens in a separate system from the callback handling.\n                            </span>\n                          </>}\n                          <div className=\"pure-control-group button-group\">\n                            <button disabled={!paymentResolved} className=\"pure-button\" type=\"button\" onClick={(event) => this.handleStopExperiment(event)}>Go back</button>\n                            <button className=\"pure-button\" type=\"button\" disabled={!paymentResolved} onClick={(event) => this.resetOrder(event)}>New order</button>\n                            <button disabled={!paymentResolved} className=\"pure-button\" type=\"button\" onClick={(event) => this.handleResetCustomer(event)}>Reset</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>}\n\n                  {step === steps.ORDER &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"pure-form pure-form-stacked\">\n                        <div className=\"box\">\n                          <div className=\"pure-control-group\">\n\n                            <h2>Settle payment request</h2>\n                            <p><strong>TID:</strong> {currentTransactionId ? currentTransactionId : 'N/A'}</p>\n                            <p><strong>Status Code:</strong> {currentStatusCode ? `${currentStatusCode}` : 'N/A'} </p>\n                            <p><strong>Status Type:</strong> <span style={{textTransform: \"uppercase\"}}>{currentStatus ? `${currentStatus}` : 'N/A'} </span></p>\n                            <p><strong>Customer:</strong> {customer ? customer : 'N/A'}</p>\n                          </div>\n                          {isOutcomePolling && isExperimentShortlink &&\n                            <aside className=\"warn-block\">Without a callback server, we can't detect the shortlink interaction and get the token, so in this experiment we must manually create the payment request when we know the scan has occured using the shortlink itself as a proxy for the customer. This is not recommended for production.</aside>}\n\n                          <div className=\"pure-control-group button-group\">\n                            <button className=\"pure-button pure-button-primary\" type=\"button\" disabled={!paymentResolved || loadingRequest} onClick={(event) => this.handleCreatePaymentRequest(event)}>Create</button>\n                            <button className=\"pure-button pure-button-danger\" type=\"button\" disabled={paymentResolved || loadingRequest} onClick={(event) => this.handleAbort(event)}>Abort</button>\n                            <button className=\"pure-button\" type=\"button\" disabled={paymentResolved || loadingRequest} onClick={(event) => this.handleCapture(event)}>Capture</button>\n                            <button className=\"pure-button\" type=\"button\" disabled={paymentResolved || loadingRequest} onClick={(event) => this.handleRelease(event)}>Release</button>\n                          </div>\n\n                          {advancedOptions && <div className=\"pure-control-group\">\n                            <label htmlFor=\"autoCapture\" className=\"pure-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                name=\"autoCapture\"\n                                id=\"autoCapture\"\n                                value=\"autoCapture\"\n                                checked={autoCapture}\n                                onChange={(event) => this.handleChange(event)} />\n                              &nbsp;&nbsp;Auto capture\n                            </label>\n                            <span className=\"pure-form-message-inline\">\n                              Capture authorized payments automatically.\n                              If not set, manual capture needs to happen within 72 hours,\n                              else the auth will expire and the money will be refunded.\n                            </span>\n                          </div>}\n\n\n                        </div>\n                      </div>\n                    </div>}\n\n\n                  {step === steps.ORDER && <>\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      {isExperimentPaymentlink && !currentTransactionId &&\n                        <div className=\"box\">\n                          <h2>Customer payment options</h2>\n                          <p>Create a payment request to see the various payment options.</p>\n                        </div>}\n                      {isExperimentPaymentlink && currentTransactionId &&\n                        <div className=\"box\">\n                          <h2>Customer payment options</h2>\n                          <p><strong>Acceptance URL:</strong> <br />{acceptanceUrl}</p>\n                          <p><strong>Scanned:</strong> {isClaimed ? 'Yes' : 'No'}</p>\n                          <canvas id=\"qr\" className={isClaimed ? 'active-border' : 'inactive-border'}></canvas>\n                          <p><a className=\"pure-button pure-button-secondary\" target=\"_new\" href={longDynamicLink}>Open Settle App</a></p>\n                          {advancedOptions && <p><a className=\"pure-button pure-button-secondary\" target=\"_new\" href={longDynamicLinkInternal}>Open Settle App (webview)</a></p>}\n                          {advancedOptions && <p><a className=\"pure-button pure-button-secondary\" target=\"_new\" href={checkoutPortalUrl}>Open Checkout Portal</a></p>}\n                          <p></p>\n                        </div>}\n                      {isExperimentShortlink &&\n                        <div className=\"box\">\n                          <h2>Customer payment options</h2>\n                          <p><strong>Acceptance URL:</strong> <br />{acceptanceUrl}</p>\n                          <p><strong>Scanned:</strong> {isClaimed ? 'Yes' : 'No'}</p>\n                          <canvas id=\"qr\" className={isClaimed ? 'active-border' : 'inactive-border'}></canvas>\n                          <p><a className=\"pure-button pure-button-secondary\" target=\"_new\" href={longDynamicLink}>Open Settle App</a></p>\n                          <p><a className=\"pure-button pure-button-secondary\" target=\"_new\" href={checkoutPortalUrl}>Open Checkout Portal</a></p>\n                          <p></p>\n                        </div>}\n                      {isExperimentPhonenumber &&\n                        <div className=\"box\">\n                          <h2>Customer payment options</h2>\n                          <p><strong>Phonenumber:</strong>{phonenumber}</p>\n\n                        </div>}\n                    </div>\n                  </>}\n\n\n                  {step === steps.EXPERIMENTS &&\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-3-3\">\n\n                      <div className=\"box\">\n\n                        {isExperimentPhonenumber &&\n                          <div>\n                            <h3>Phone number</h3>\n                            <p>Send payment request directly to the customer device when POS have access to customer data (or can easily accept phone number as input from customer).</p>\n                            <ol>\n                              <li>POS creates local order with unique id.</li>\n                              <li>POS creates payment request for customer phone number.</li>\n                              <li>Settle pushes payment request to the customer.</li>\n                              <li>Settle calls back to POS with outcome.</li>\n                            </ol>\n                            <p><em>Example:</em> Vending machine, web-shop, recurring payments</p>\n                          </div>}\n\n                        {isExperimentPhonenumber &&\n                          <div className=\"pure-form pure-form-stacked\">\n                            <h3>Experiment options</h3>\n                            <div className=\"pure-control-group\">\n\n                              <label htmlFor=\"phonenumber\">Recipient phone number</label>\n                              <input\n                                className=\"pure-input-2-5\"\n                                name=\"phonenumber\"\n                                type=\"text\"\n                                id=\"phonenumber\"\n                                value={phonenumber}\n                                onChange={(event) => this.handleChange(event)} />\n                              <span className=\"pure-form-message-inline\">Needs to be <a href=\"https://en.wikipedia.org/wiki/MSISDN\">MSISDN</a> formatted</span>\n                            </div>\n                          </div>}\n\n                        {isExperimentPaymentlink &&\n                          <div>\n                            <h3>Paymentlink</h3>\n                            <p>The easiest method, as we gather order details and then create payment request that we can then link to for some user to later claim.</p>\n                            <ol>\n                              <li>POS creates local order with unique id.</li>\n                              <li>POS creates payment request.</li>\n                              <li>POS creates unique Paymentlink QR code.</li>\n                              <li>Customer scans QR code.</li>\n                              <li>Settle pushes payment request to the customer.</li>\n                              <li>Settle calls back to POS with outcome.</li>\n                            </ol>\n                            <p><em>Example:</em> Modern cash registers, mobile pos, card terminals, web-shops.</p>\n                          </div>}\n\n                        {isExperimentShortlinkReuse &&\n                          <div>\n                            <h3>Shortlink (reusable)</h3>\n                            <p>Mainly used for printed QR codes, on posters and newspaper ads.</p>\n                            <p>Payment request sent when a user interacts with a Shortlink that was created during POS setup.</p>\n                            <p>The Shortlink acts as a proxy between the user and a payment, and can be reused as many times as needed, even by diffrent users.</p>\n                            <p>QR created when POS device is turned on or registered.</p>\n                            <ol>\n                              <li>Setup: POS creates Shortlink.</li>\n                              <li>Setup: POS creates Shortlink QR code.</li>\n                              <li>Customer scans reusable Shortlink QR code.</li>\n                              <li>Settle calls back to POS with customer identifier.</li>\n                              <li>POS creates payment request for customer identifier.</li>\n                              <li>Settle pushes payment request to the customer.</li>\n                              <li>Settle calls back to POS with outcome.</li>\n                            </ol>\n                            \n                            <p><em>Example:</em> POS device without customer facing display, requiring pre-printed QR code.</p>\n                          </div>}\n\n                        {isExperimentShortlinkSingle &&\n                          <div>\n                            <h3>Shortlink (single use)</h3>\n                            <p>Useful pattern to pass along a local transaction id when the device handling the customer and is not receiving the callback.</p>\n                            <p>The local transaction id is passed along by Settle and can be picked up by centralised middleware to understand what POS device and purchase the request originated from.</p>\n                            <p>QR created when POS device is turned on or registered.</p>\n                            <ol>\n                              <li>Setup: POS creates Shortlink.</li>\n                              <li>Setup: POS creates Shortlink QR code with local id.</li>\n                              <li>Customer scans Shortlink QR code.</li>\n                              <li>Settle calls back to POS with customer identifier and local id.</li>\n                              <li>POS creates payment request for customer identifier.</li>\n                              <li>Settle pushes payment request to the customer.</li>\n                              <li>Settle calls back to POS with outcome.</li>\n                            </ol>\n                            <p><em>Example:</em> Card terminals</p>\n                          </div>}\n\n                      </div>\n                    </div>}\n\n\n\n\n\n                  {step >= steps.ORDER && <>\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"box\">\n                        <h2>Experiment log</h2>\n                        <div>{statusLog.map(({ id, message }) =>\n                          <div key={id} className=\"row\">\n                            <div className=\"pure-u-21-24\">{message}</div>\n                          </div>\n                        )}</div>\n                      </div>\n                    </div>\n                    <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                      <div className=\"box\">\n                        <h2>API request log {loadingRequest && <div className=\"loader loader-small\" ></div>}</h2>\n                        <div className=\"status\">{apiLog.map(({ id, method, endpoint, body, status, duplicates }) =>\n                          <div key={id} className=\"row pure-g\">\n                            <div className=\"pure-u-2-24\">{duplicates > 0 && <span className=\"label\">{duplicates}</span>}</div>\n                            <div className=\"pure-u-22-24\"><strong>{method}</strong> {status && `${status} `}{endpoint}</div>\n                          </div>\n                        )}\n                        </div>\n                      </div>\n                    </div>\n                  </>}\n\n                </div>\n              </div>\n            </Route>\n\n            <Route path=\"/home\">\n\n\n              <div className=\"content\">\n                <h1>API Utility</h1>\n                <div className=\"pure-g\">\n\n                  <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                    <div className=\"pure-form pure-form-stacked\">\n                      <div className=\"box\">\n                        <h2>Experiments</h2>\n                        <ul>\n                          <li><Link to=\"/payment-flows\">Payment flows</Link></li>\n                          <li>Login flows (coming soon)</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"pure-u-1 pure-u-md-1-2 pure-u-lg-1-3\">\n                    <div className=\"pure-form pure-form-stacked\">\n                      <div className=\"box\">\n                        <h2>Functions (coming soon)</h2>\n                        <ul>\n                          <li>Payment requests</li>\n                          <li>Permission requests</li>\n                          <li>Userinfo</li>\n                          <li>POS</li>\n                          <li>Shortlinks</li>\n                          <li>Reports</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n\n          </Switch>\n\n        </main>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/settle-logo.29d40954.png\";","module.exports = {\n  prod: {\n    name: 'Production',\n    portal: 'portal-dot-settle-core-prod.appspot.com',\n    deeplink: {\n      env: 'settle',\n      baseUrl: 'get.settle.eu',\n      apn: 'eu.settle.app',\n      ibi: 'eu.settle.app',\n      isi: '1440051902',\n      ius: 'eu.settle.app.firebaselink',\n    }\n  },\n  sandbox: {\n    name: 'Sandbox',\n    portal: 'portal-dot-settle-core-demo.appspot.com',\n    deeplink: {\n      env: 'settle-demo',\n      baseUrl: 'settledemo.page.link',\n      apn: 'eu.settle.app.sandbox',\n      ibi: 'eu.settle.app.sandbox',\n      isi: '1453180781',\n      ius: 'eu.settle.app.firebaselink',\n    },\n    testUserId: '76pj520h',\n    testMerchantId: 'f1645s',\n    testSecret: '.IIIXVCFdey3Bo5HD4gQh2+y_Ce9C.qodl_9FB.CQAWHua_rCrpCn3N-YwagvGY7',\n  },\n  qa: {\n    name: 'QA',\n    portal: 'portal-dot-settle-core-qa.appspot.com',\n    deeplink: {\n      env: 'settle-qa',\n      baseUrl: 'settleqa.page.link',\n      apn: 'io.auka.aukasales.qa',\n      ibi: 'io.auka.aukasales.qa',\n      isi: '1402708733',\n      ius: 'eu.settle.app.firebaselink',\n    }\n  },\n  dev: {\n    name: 'Development',\n    portal: 'portal-dot-settle-core-dev.appspot.com',\n    deeplink: {\n      env: 'settle-dev',\n      baseUrl: 'settledev.page.link',\n      apn: 'io.auka.aukasales.dev',\n      ibi: 'io.auka.aukasales.dev',\n      isi: '1395496531',\n      ius: 'eu.settle.app.firebaselink',\n    }\n  }\n};"],"sourceRoot":""}